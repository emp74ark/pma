{"version":3,"file":"static/js/218.d93d3023.chunk.js","mappings":"4MAAaA,EAAe,CAC1B,CACEC,KAAM,YACNC,KAAM,YACNC,MAAO,gBAET,CACEF,KAAM,SACNC,KAAM,WACNC,MAAO,gB,SC8CX,EA9C6B,SAACC,GAC5B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEJC,GACTC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,CAAK,IADzCC,QAAWH,MAYb,OACE,UAACI,EAAA,EAAI,CACHC,MAAO,CAAEC,MAAO,SAChBC,UAAU,mBACVC,QAAS,kBAbMC,EAaUd,EAAMe,QAZjCZ,EAAS,eAAD,OAAgBW,IADR,IAACA,CAaoB,EACnCE,GAAIX,EACJY,KAAgB,SAAVZ,EAAmB,QAAU,OAAO,WAE1C,SAACI,EAAA,SAAW,WACV,iBAAKG,UAAU,MAAK,WAClB,SAACH,EAAA,QAAU,CAACG,UAAU,MAAK,SAAEZ,EAAMkB,SACnC,SAACC,EAAA,EAAW,CAACP,UAAU,kBAAkBQ,KAAK,KAAI,SAC/CxB,EAAayB,KAAI,gBAAGxB,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAK,OACpC,SAACuB,EAAA,EAAM,CAELV,UAAS,UAAKd,EAAI,YAAIC,GACtBwB,QAAQ,OACRV,QAAS,SAACW,GAAC,OAtBH,SAACA,EAAe3B,EAAcG,GAClDwB,EAAEC,kBACFxB,GAASyB,EAAAA,EAAAA,IAAU,CAAE7B,KAAMA,EAAM8B,KAAM3B,IACzC,CAmB8B4B,CAAcJ,EAAG3B,EAAMG,EAAM,GAHxCH,EAIL,YAKV,SAACY,EAAA,OAAS,WACR,SAACA,EAAA,OAAS,UAAET,EAAM6B,kBAI1B,C","sources":["components/BoardItem/ButtonItem.buttons.tsx","components/BoardItem/BoardItem.tsx"],"sourcesContent":["export const BoardButtons = [\r\n  {\r\n    name: 'editBoard',\r\n    icon: 'bi-pencil',\r\n    color: 'text-success',\r\n  },\r\n  {\r\n    name: 'remove',\r\n    icon: 'bi-trash',\r\n    color: 'text-danger',\r\n  },\r\n];\r\n","import { FC, MouseEvent } from 'react';\r\nimport { Board } from '../../shared/interfaces';\r\nimport { Button, ButtonGroup, Card } from 'react-bootstrap';\r\nimport { openModal } from '../../redux/modalSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BoardButtons } from './ButtonItem.buttons';\r\n\r\nconst BoardItem: FC<Board> = (board) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const {\r\n    setting: { theme },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  const openBoard = (boardId: string) => {\r\n    navigate(`/user/board/${boardId}`);\r\n  };\r\n\r\n  const buttonHandler = (e: MouseEvent, name: string, board: Board) => {\r\n    e.stopPropagation();\r\n    dispatch(openModal({ name: name, data: board }));\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      style={{ width: '20rem' }}\r\n      className=\"col-2 p-0 shadow\"\r\n      onClick={() => openBoard(board.id!)}\r\n      bg={theme}\r\n      text={theme === 'dark' ? 'white' : 'dark'}\r\n    >\r\n      <Card.Header>\r\n        <div className=\"row\">\r\n          <Card.Title className=\"col\">{board.title}</Card.Title>\r\n          <ButtonGroup className=\"col float-right\" size=\"sm\">\r\n            {BoardButtons.map(({ name, icon, color }) => (\r\n              <Button\r\n                key={name}\r\n                className={`${icon} ${color}`}\r\n                variant=\"link\"\r\n                onClick={(e) => buttonHandler(e, name, board)}\r\n              />\r\n            ))}\r\n          </ButtonGroup>\r\n        </div>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Card.Text>{board.description}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BoardItem;\r\n"],"names":["BoardButtons","name","icon","color","board","dispatch","useDispatch","navigate","useNavigate","theme","useSelector","state","setting","Card","style","width","className","onClick","boardId","id","bg","text","title","ButtonGroup","size","map","Button","variant","e","stopPropagation","openModal","data","buttonHandler","description"],"sourceRoot":""}