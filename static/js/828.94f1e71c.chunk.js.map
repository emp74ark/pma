{"version":3,"file":"static/js/828.94f1e71c.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/TaskItem/TaskItem.buttons.tsx","components/TaskItem/TaskItem.tsx","components/TasksList/TasksList.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","export const TaskButtons = [\r\n  {\r\n    name: 'editTask',\r\n    icon: 'bi-pencil',\r\n    color: 'text-primary',\r\n  },\r\n  {\r\n    name: 'remove',\r\n    icon: 'bi-trash',\r\n    color: 'text-danger',\r\n  },\r\n];\r\n","import { FC, MouseEvent } from 'react';\r\nimport { Task } from '../../shared/interfaces';\r\nimport { Button, ButtonGroup, ListGroup } from 'react-bootstrap';\r\nimport { openModal } from '../../redux/modalSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport { TaskButtons } from './TaskItem.buttons';\r\n\r\nexport const TaskItem: FC<Task> = (task) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    users,\r\n    setting: { theme },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  const buttonHandler = (e: MouseEvent, name: string, task: Task) => {\r\n    e.stopPropagation();\r\n    dispatch(openModal({ name, data: task }));\r\n  };\r\n\r\n  function defineName(userId: string) {\r\n    const user = users.all.filter((user) => user.id === userId);\r\n    if (user.length !== 0) {\r\n      return user[0].login;\r\n    }\r\n    return 'unknown';\r\n  }\r\n\r\n  return (\r\n    <ListGroup.Item\r\n      variant={theme}\r\n      className=\"w-100\"\r\n      onClick={(e) => buttonHandler(e, 'infoTask', task)}\r\n    >\r\n      <div className=\"row align-middle\">\r\n        <h6 className=\"col\">{task.title}</h6>\r\n        <ButtonGroup className=\"col float-right\">\r\n          {TaskButtons.map(({ name, icon }) => (\r\n            <Button\r\n              key={name}\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={(e) => buttonHandler(e, name, task)}\r\n            >\r\n              <i className={icon} />\r\n            </Button>\r\n          ))}\r\n        </ButtonGroup>\r\n      </div>\r\n      <div className=\"row p-2\">{task.description}</div>\r\n      <div className=\"row p-2\">{defineName(task.userId)}</div>\r\n    </ListGroup.Item>\r\n  );\r\n};\r\n","import { ColumnData, Task } from '../../shared/interfaces';\r\nimport { TaskItem } from '../TaskItem/TaskItem';\r\nimport { ReactSortable, SortableEvent } from 'react-sortablejs';\r\nimport { useState } from 'react';\r\nimport { editTask, getTaskById } from '../../services/task.service';\r\n\r\nconst TasksList = (props: { data: ColumnData }) => {\r\n  const { data } = props;\r\n  const [tasks, setTasks] = useState<Task[]>(data.tasks.sort((a, b) => a.order! - b.order!));\r\n\r\n  const onSortEnd = ({ from, to, oldIndex, newIndex }: SortableEvent) => {\r\n    const { boardId, id: taskId } = tasks[oldIndex!];\r\n    getTaskById(boardId!, from.id, taskId).then(({ data }) => {\r\n      const next = {\r\n        ...data,\r\n        columnId: to.id,\r\n        order: newIndex! + 1,\r\n      };\r\n      editTask(data, next);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ReactSortable\r\n      list={tasks}\r\n      setList={setTasks}\r\n      onEnd={onSortEnd}\r\n      animation={200}\r\n      delayOnTouchOnly={true}\r\n      delay={2}\r\n      group=\"shared\"\r\n      className=\"list-group shadow-sm\"\r\n      ghostClass={'ghost'}\r\n      id={data.id}\r\n    >\r\n      {tasks.map((task) => (\r\n        <TaskItem {...task} key={task.id} />\r\n      ))}\r\n    </ReactSortable>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n"],"names":["ListGroupItem","React","ref","bsPrefix","active","disabled","eventKey","className","variant","action","as","props","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","preventDefault","stopPropagation","onClick","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item","TaskButtons","name","icon","color","TaskItem","task","dispatch","useDispatch","useSelector","state","users","theme","setting","buttonHandler","e","openModal","data","title","ButtonGroup","map","Button","size","description","userId","user","all","filter","id","length","login","defineName","useState","tasks","sort","a","b","order","setTasks","ReactSortable","list","setList","onEnd","from","to","oldIndex","newIndex","boardId","taskId","getTaskById","then","next","columnId","editTask","animation","delayOnTouchOnly","delay","group","ghostClass"],"sourceRoot":""}